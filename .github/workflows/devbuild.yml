# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Development Builds

on: [push]

jobs:
  Build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Read relevant fields from gradle.properties
      id: properties
      run: | # From christian-draeger/read-properties, using the action makes it extremely messy until christian-draeger/read-properties#2
        path='./gradle.properties'
        for property in mod_version minecraft_version release-curse-versions release-extra-branch release-extra-branch-name release-extra-curse-version
        do
          result=$(sed -n "/^[[:space:]]*$property[[:space:]]*=[[:space:]]*/s/^[[:space:]]*$property[[:space:]]*=[[:space:]]*//p" "$path")
          echo "$property: $result"
          echo "$property=$result" >> $GITHUB_OUTPUT
        done
    - uses: actions/github-script@v6
      env:
        LAST_RELEASE: ${{ steps.properties.outputs.mod_version }}
      with:
        script: |
          const { LAST_RELEASE } = process.env;
          console.log('Starting release of: ' + LAST_RELEASE);
          let releases = (await github.rest.repos.listReleases({
            owner: context.repo.owner,
            repo: context.repo.repo
          })).data;
          console.log('Previous release was: ' + releases[1].name);
          for (let release of releases.slice(1)) {
            if (release.name.includes(LAST_RELEASE))
              core.setFailed('Version number is the same as a previous release!')
          }
