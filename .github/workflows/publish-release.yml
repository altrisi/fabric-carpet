name: Publish Release

on:
  release:
    types: [published]
jobs:
  Build:
    runs-on: ubuntu-latest
    outputs:
      jarname: ${{ steps.findjar.outputs.jarname }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: ${{ runner.os }}-gradle
    - name: Grant execute permission to gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build
    - name: Find correct JAR
      id: findjar
      run: |
        output="$(find build/libs/ ! -name "*-dev.jar" ! -name "*-sources.jar" -type f)"
        echo "::set-output name=jarname::$output"
    - name: Save the build in the action
      uses: actions/upload-artifact@v2
      with:
        name: Built Release
        path: ${{steps.findjar.outputs.jarname}}
    - name: Save the properties file to not need to checkout all
      uses: actions/upload-artifact@v2
      with:
        name: Properties file
        path: gradle.properties
  Publish-to-Github:
    runs-on: ubuntu-latest
    needs: [Build]
    steps:
      - name: Get the build
        uses: actions/download-artifact@v2
        with:
          name: Built Release
      - name: Upload to the Github release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./${{needs.Build.outputs.jarname}}
          asset_name: ${{needs.Build.outputs.jarname}}
          asset_content_type: application/java-archive
