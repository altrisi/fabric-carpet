name: Publish Release

on:
  release:
    types: [published]
jobs:
  Get-Properties:
    runs-on: ubuntu-latest
    outputs:
      release-type: ${{ steps.type.outputs.release-type }}
      carpet-version: ${{ steps.carpetver.outputs.value }}
      minecraft-version: ${{ steps.mcver.outputs.value }}
      extra-branch: ${{ steps.buildextra.outputs.value }}
      extra-branch-name: ${{ steps.extra-name.outputs.value }}
      extra-branch-curse-version: ${{ steps.curse-extra-version.outputs.value }}
    steps: #TO-DO Maybe make a PR to christian-draeger/read-properties to allow reading multiple properties at once
      - name: Checkout the sources
        uses: actions/checkout@v2
      - name: Determine release type
        id: type
        run: |
          if ${{ github.event.release.prerelease }}; then
            echo "::set-output name=release-type::beta"
          else
            echo "::set-output name=release-type::release"
          fi
      - name: Get Carpet version from properties
        id: carpetver
        uses: christian-draeger/read-properties@1.0.1
        with:
          path: './gradle.properties'
          property: 'mod_version'
      - name: Get Minecraft version from properties
        id: mcver
        uses: christian-draeger/read-properties@1.0.1
        with:
          path: './gradle.properties'
          property: 'minecraft_version'
      - name: Get whether to build another branch from properties
        id: buildextra
        uses: christian-draeger/read-properties@1.0.1
        with:
          path: './gradle.properties'
          property: 'release-extra-branch'
      - name: Get Extra branch name from properties
        if: steps.buildextra.outputs.value == 'true'
        id: extra-name
        uses: christian-draeger/read-properties@1.0.1
        with:
          path: './gradle.properties'
          property: 'release-extra-branch-name'
      - name: Get Extra release Curseforge's version name from properties
        if: steps.buildextra.outputs.value == 'true'
        id: curse-extra-version
        uses: christian-draeger/read-properties@1.0.1
        with:
          path: './gradle.properties'
          property: 'release-extra-curse-version'
      - name: Debug
        run: |
          echo "
          release-type: ${{ steps.type.outputs.release-type }}
          carpet-version: ${{ steps.carpetver.outputs.value }}
          minecraft-version: ${{ steps.mcver.outputs.value }}
          extra-branch: ${{ steps.buildextra.outputs.value }}
          extra-branch-name: ${{ steps.extra-name.outputs.value }}
          extra-branch-curse-version: ${{ steps.curse-extra-version.outputs.value }}"
  Build:
    runs-on: ubuntu-latest
    needs: [Get-Properties]
    outputs:
      jarname: ${{ steps.findjar.outputs.jarname }}
    steps:
    - name: Checkout the sources
      uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: ${{ runner.os }}-gradle
    - name: Grant execute permission to gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build
    - name: Find correct JAR
      id: findjar
      run: |
        output="$(find build/libs/ ! -name "*-dev.jar" ! -name "*-sources.jar" -type f -printf "%f\n")"
        echo "::set-output name=jarname::$output"
    - name: Save the build in the action
      uses: actions/upload-artifact@v2
      with:
        name: Built Release
        path: build/libs/${{steps.findjar.outputs.jarname}}
  Publish-to-Github:
    runs-on: ubuntu-latest
    needs: [Build]
    steps:
      - name: Get the build
        uses: actions/download-artifact@v2
        with:
          name: Built Release
      - name: Upload to the Github release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./${{needs.Build.outputs.jarname}}
          asset_name: ${{needs.Build.outputs.jarname}}
          asset_content_type: application/java-archive
  Publish-to-Curseforge:
    if: contains('Nothing', 'Something') # Aka disable 
    runs-on: ubuntu-latest
    needs: [Build, Get-Properties]
    steps:
      - name: Get the build
        uses: actions/download-artifact@v2
        with:
          name: Built Release
      - name: Upload to Curseforge
        uses: itsmeow/curseforge-upload@v2
        with:
          token: ${{ secrets.CF_API_TOKEN }}
          project_id: 349239
          game_endpoint: minecraft
          file_path: ${{ needs.Build.outputs.jarname }}
          changelog_type: markdown
          changelog: ${{ github.event.release.body }}
          #display_name: Carpet v${{TO-DO version}} for Minecraft ${{TO-DO MCVer}} 
          display_name: ${{ github.event.release.name }} # TODO consider something like the above?
          game_versions: ${{ needs.Get-Properties.outputs.minecraft-version }}
          release_type: ${{ needs.Get-Properties.outputs.release-type }}
  Build-Snapshot:
    runs-on: ubuntu-latest
    needs: [Get-Properties]
    if: contains(needs.Get-Properties.outputs.extra-branch, 'true')
    outputs:
      jarname: ${{ steps.findjar.outputs.jarname }}
    steps:
    - name: Checkout the sources
      uses: actions/checkout@v2
      with:
        ref: ${{ needs.Get-Properties.outputs.extra-branch-name }}
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: ${{ runner.os }}-gradle
    - name: Grant execute permission to gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build
    - name: Find correct JAR
      id: findjar
      run: |
        output="$(find build/libs/ ! -name "*-dev.jar" ! -name "*-sources.jar" -type f -printf "%f\n")"
        echo "::set-output name=jarname::$output"
    - name: Save the build in the action
      uses: actions/upload-artifact@v2
      with:
        name: Built Snapshot Release
        path: build/libs/${{steps.findjar.outputs.jarname}}
  Publish-Snapshot-to-Github:
    runs-on: ubuntu-latest
    needs: [Build-Snapshot]
    steps:
      - name: Get the build
        uses: actions/download-artifact@v2
        with:
          name: Built Snapshot Release
      - name: Upload to the Github release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./${{needs.Build-Snapshot.outputs.jarname}}
          asset_name: ${{needs.Build-Snapshot.outputs.jarname}}
          asset_content_type: application/java-archive
  Publish-Snapshot-to-Curseforge:
    if: contains('Nothing', 'Something') # Aka disable 
    runs-on: ubuntu-latest
    needs: [Build-Snapshot, Get-Properties]
    steps:
      - name: Get the build
        uses: actions/download-artifact@v2
        with:
          name: Built Snapshot Release
      - name: Upload to Curseforge
        uses: itsmeow/curseforge-upload@v2
        with:
          token: ${{ secrets.CF_API_TOKEN }}
          project_id: 349239
          game_endpoint: minecraft
          file_path: ${{ needs.Build-Snapshot.outputs.jarname }}
          changelog_type: markdown
          changelog: ${{ github.event.release.body }}
          #display_name: Carpet v${{TO-DO version}} for Minecraft ${{TO-DO MCVer}} 
          display_name: ${{ github.event.release.name }} # TODO consider something like the above? Mostly here, with the CF version
          game_versions: ${{ needs.Get-Properties.outputs.extra-branch-curse-version }}
          release_type: ${{ needs.Get-Properties.outputs.release-type }}
  Merge-Docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the sources
        uses: actions/checkout@v2
      - name: Merge docs
        run: |
          ./mergedoc.sh
      - name: Commit merged docs
        continue-on-error: true
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git commit -am "Merge docs for '${{ github.event.release.name }}'"
          git push
          echo "Won't show error when nothing to commit"
